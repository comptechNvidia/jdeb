# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow builds a package using Gradle and publishes it to GitHub Packages upon release creation.
# For more information, see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Read access to repository contents
      packages: write  # Write access to publish packages

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'  # Using Temurin for Java distribution
          server-id: github  # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }}  # Location for the settings.xml file

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4 # Using Gradle setup action
        with:
          gradle-version: '7.5'  # Specify the desired Gradle version

      - name: Build with Gradle
        run: |
          echo "Building the project with Gradle..."
          ./gradlew build
          echo "Build completed successfully."

      - name: Publish to GitHub Packages
        run: |
          echo "Publishing to GitHub Packages..."
          ./gradlew publish
          echo "Publishing completed successfully."
        env:
          USERNAME: ${{ github.actor }}  # GitHub username of the actor
          TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token for authentication

      - name: Verify Package Publication
        run: |
          echo "Verifying package publication..."
          # Replace 'your-package-name' with the actual package name to verify
          if curl -s -f -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/packages/container/your-package-name/versions | grep -q '"name":'; then
            echo "Package published successfully."
          else
            echo "Package publication failed or package not found."
            exit 1
          fi
